version: 2.1
orbs:
  ruby: circleci/ruby@1.1.2

jobs:
  build:
    docker:
      - image: circleci/ruby:2.7
    working_directory: ~/gummy-search # githubのリポジトリ名
    steps:
      - checkout:
          path: ~/gummy-search # githubのリポジトリ名
      - ruby/install-deps

  rubocop:
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: gummy_search_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/gummy-search
    steps:
      - checkout:
          path: ~/gummy-search
      - restore_cache:
          keys:
            - gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
            - gemfiles-{{ .Branch }}-
            - gemfiles-master-
      - ruby/install-deps
      - run:
          name: Run rubocop
          command: bundle exec rubocop --parallel
      - save_cache:
          key: gemfiles-{{ .Branch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

  rspec:
    docker:
      - image: circleci/ruby:2.7
      - image: circleci/mysql:5.5
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: gummy_search_test
          MYSQL_USER: root
    environment:
      BUNDLE_JOBS: "3"
      BUNDLE_RETRY: "3"
      APP_DATABASE_HOST: "127.0.0.1"
      RAILS_ENV: test
    working_directory: ~/gummy-search
    steps:
      - checkout
      # Restore bundle cache
      - type: cache-restore
        name: Restore bundle cache
        key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}
      - run:
          name: Bundle Install
          command: bundle install --path vendor/bundle
      # Store bundle cache
      - type: save-cache
        name: Store bundle cache
        key: rails-demo-bundle-{{ checksum "Gemfile.lock" }}
        paths: vendor/bundle
      # Restore yarn cache
      - type: cache-restore
        name: Restore bundle cache
        key: rails-demo-bundle-{{ checksum "yarn.lock" }}
      - run:
          name: yarn Install
          command: yarn install
      # Store yarn cache
      - type: cache-save
        name: Save bundle cache
        key: rails-demo-bundle-{{ checksum 'yarn.lock' }}
        paths: .yarn-cache
      # Database setup
      - run:
          name: Database setup
          command: |
            bundle exec bin/rails db:create
            bundle exec rails db:migrate
      # Run rspec in parallel
      - run:
          name: Rspec
          command: bundle exec rspec

workflows:
  version: 2.1
  build_and_test:
    jobs:
      - build
      - rubocop:
          requires:
            - build
      - rspec:
          requires:
            - rubocop
